// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifierContract = artifacts.require("Verifier");
var SampleProof = require('../../zokrates/code/square/proof');

contract('TestSquareVerifier', accounts => {

    const account_one = accounts[0];
    const a = SampleProof.proof.a;
    const b = SampleProof.proof.b;
    const c = SampleProof.proof.c;
    const inputs = SampleProof.inputs;

    before(async function () {
        this.contract = await verifierContract.new(accounts);
    });

    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it('should provide test verification with correct proof', async function () {
        
        let result = await this.contract.verifyTx(a, b, c, inputs);
        assert.equal(result, true, "Test verification with correct proof should result in 'true'");
    });

    // Test verification with incorrect proof
    it('should provide test verification with incorrect proof', async function () {
        let inputsTampered = [ '0x0000000000000000000000000000000000000000000000000000000000000019',
        '0x0000000000000000000000000000000000000000000000000000000000000009' ];

        let result = await this.contract.verifyTx(a, b, c, inputsTampered);
        assert.equal(result, false, "Test verification with correct proof should result in 'false'");
    });

})